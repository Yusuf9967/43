package mathLib.integral.methods;

import flanagan.integration.IntegralFunction;
import mathLib.integral.Integral1D;
import mathLib.integral.intf.IntegralFunction1D;
import mathLib.sequence.Sequence;
import mathLib.sequence.Series;


public class GaussLaguerreQuadrature {

	// 50 points
	// alpha = 0

	// for calculating integral 0 to inf

	double[] points = { 0.028630518339379081948, 0.15088293567693373238, 0.3709487815348964384715,
			0.689090699881047880962, 1.10562502353991342331, 1.62096175110250141489, 2.2356103759151801252,
			2.950183366641835120398, 3.76539977440578232956, 4.68208938755928458352, 5.70119757478489031012,
			6.82379090979455137731, 8.05106366939079216101, 9.38434530825840692182, 10.82510903154914804335,
			12.37498160875746208603, 14.03575459982990826766, 15.8093971978446673823, 17.69807093335024929787,
			19.70414653546156463817, 21.83022330657825509502, 24.0791514444114994861, 26.45405784125298389664,
			28.9583760119373804025, 31.59588095662286462472, 34.37072996309044553195, 37.28751061055048655337,
			40.35129757358606559819, 43.56772026999502122062, 46.94304399160303808352, 50.48426796312992265582,
			54.19924488016862227265, 58.09682801724852650147, 62.18705417568890565534, 66.4813738784448170642,
			70.9929448266194904506, 75.73701154772731213124, 80.73140480247768871009, 85.99721113646322907542,
			91.55969041253387638169, 97.44956561485055565805, 103.704891236692262885, 110.3738588076402820884,
			117.5191982031111754859, 125.2254701334734396712, 133.6120279227286949937, 142.8583254892541193917,
			153.260371972603586599, 165.3856433166825403772, 180.6983437092145168425 };

	double[] weights = { 0.071404726135189883536, 0.1471486069645883655288, 0.185671627574831346251,
			0.184385382527353947166, 0.154201168606355621947, 0.111685369902268788944, 0.0710528854901958562,
			0.0400202769115083311104, 0.0200506230800717136755, 0.0089608512036462806293, 0.00357811241531566019083,
			0.00127761715678904987622, 4.0803024498371894306E-4, 1.16528832230972393332E-4, 2.97417049369416545276E-5,
			6.7778425265420277603E-6, 1.37747950317136035616E-6, 2.49288618172009178449E-7, 4.0103543504278268139E-8,
			5.7233317481414250756E-9, 7.22943424918266467153E-10, 8.0617101422817794832E-11, 7.9133930999437228417E-12,
			6.8157366176767798825E-13, 5.13242671658949021321E-14, 3.36562476243781440808E-15,
			1.91347632696503537649E-16, 9.385589781827253322E-18, 3.95006996450341113086E-19,
			1.417749517827512025424E-20, 4.3099702762921753006E-22, 1.101257519845548013509E-23,
			2.34461775560898671458E-25, 4.118544154638230108E-27, 5.9022467635964484321E-29,
			6.812008916553065513569E-31, 6.2374494988121017565E-33, 4.4524405796833773756E-35,
			2.42686235225048713388E-37, 9.85297148104968613434E-40, 2.89107887231842813781E-42,
			5.9061627081123604884E-45, 8.0128745975039700879E-48, 6.78957542439641676E-51, 3.3081730108492522889E-54,
			8.250964876440456021E-58, 8.848728128298017696E-62, 3.0648948898444166018E-66, 1.9887082293307516128E-71,
			6.0495671522387830948E-78 };

	IntegralFunction func;
	double start, end;

	public GaussLaguerreQuadrature(IntegralFunction func) {
		this.func = func;
	}

	public double getIntegral() {
		Sequence sFunc = k -> weights[(int) k] * func.function(getTransform(points[(int) k])) *
								Math.exp(getTransform(points[(int) k]));
		Series integral = new Series(sFunc);
		return integral.sum(0, points.length - 1);
	}

	private double getTransform(double u) {
		return u;
	}

	// for test
	public static void main(String[] args) {
		IntegralFunction1D func1d = x -> Math.pow(Math.sin(x) / x, 2);
		Integral1D integral1d = new Integral1D(func1d, 0, Double.MAX_VALUE);
		System.out.println(integral1d.getIntegral());

		GaussLaguerreQuadrature glQuad = new GaussLaguerreQuadrature(func1d);
		System.out.println(glQuad.getIntegral());
	}

}
